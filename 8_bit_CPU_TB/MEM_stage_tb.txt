module MEM_Stage_tb;

    // Inputs
    reg clk;
    reg mem_read;
    reg mem_write;
    reg [7:0] alu_result;
    reg [7:0] reg_data2;

    // Outputs
    wire [7:0] memory_read_data;

    // Instantiate the Unit Under Test (UUT)
    MEM_Stage uut (
        .clk(clk), 
        .mem_read(mem_read), 
        .mem_write(mem_write), 
        .alu_result(alu_result), 
        .reg_data2(reg_data2), 
        .memory_read_data(memory_read_data)
    );

    always #5 clk = ~clk;

    initial begin
        // Initializing Inputs
        clk = 0;
        mem_read = 0;
        mem_write = 0;
        alu_result = 8'h00;
        reg_data2 = 8'h00;

        // Test Write Operation
        alu_result = 8'h10;  
        reg_data2 = 8'h55;   // Data to write
        mem_write = 1;
        mem_read = 0;
        #10;
        mem_write = 0;

        // Test Read Operation
        alu_result = 8'h10;  // Address to read
        mem_write = 0;
        mem_read = 1;
        #10;
        $display("Memory Read Data: %h", memory_read_data);
        mem_read = 0;

        // Testing  another Write and Read Operation
        alu_result = 8'h20;  // New address to write
        reg_data2 = 8'hAA;   // New data to write
        mem_write = 1;
        #10;
        mem_write = 0;
        
        alu_result = 8'h20;  // New address to read
        mem_read = 1;
        #10;
        $display("Memory Read Data: %h", memory_read_data);
        mem_read = 0;

        $finish;
    end
endmodule
